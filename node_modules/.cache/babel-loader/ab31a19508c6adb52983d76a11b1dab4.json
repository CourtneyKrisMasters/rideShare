{"remainingRequest":"/Users/courtneymasters/Documents/ComSci/COS243/finalProject/rideShare/node_modules/babel-loader/lib/index.js!/Users/courtneymasters/Documents/ComSci/COS243/finalProject/rideShare/node_modules/vuetify/lib/components/VCalendar/util/events.js","dependencies":[{"path":"/Users/courtneymasters/Documents/ComSci/COS243/finalProject/rideShare/node_modules/vuetify/lib/components/VCalendar/util/events.js","mtime":1588347541958},{"path":"/Users/courtneymasters/Documents/ComSci/COS243/finalProject/rideShare/node_modules/cache-loader/dist/cjs.js","mtime":1588196213327},{"path":"/Users/courtneymasters/Documents/ComSci/COS243/finalProject/rideShare/node_modules/babel-loader/lib/index.js","mtime":1588196213265}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcGFyc2VUaW1lc3RhbXAsIGdldERheUlkZW50aWZpZXIsIGdldFRpbWVzdGFtcElkZW50aWZpZXIsIE9GRlNFVF9USU1FIH0gZnJvbSAnLi90aW1lc3RhbXAnOwpleHBvcnQgZnVuY3Rpb24gcGFyc2VFdmVudChpbnB1dCwgaW5kZXgsIHN0YXJ0UHJvcGVydHksIGVuZFByb3BlcnR5KSB7CiAgY29uc3Qgc3RhcnQgPSBwYXJzZVRpbWVzdGFtcChpbnB1dFtzdGFydFByb3BlcnR5XSwgdHJ1ZSk7CiAgY29uc3QgZW5kID0gaW5wdXRbZW5kUHJvcGVydHldID8gcGFyc2VUaW1lc3RhbXAoaW5wdXRbZW5kUHJvcGVydHldLCB0cnVlKSA6IHN0YXJ0OwogIGNvbnN0IHN0YXJ0SWRlbnRpZmllciA9IGdldERheUlkZW50aWZpZXIoc3RhcnQpOwogIGNvbnN0IHN0YXJ0VGltZXN0YW1wSWRlbnRpZmllciA9IGdldFRpbWVzdGFtcElkZW50aWZpZXIoc3RhcnQpOwogIGNvbnN0IGVuZElkZW50aWZpZXIgPSBnZXREYXlJZGVudGlmaWVyKGVuZCk7CiAgY29uc3QgZW5kT2Zmc2V0ID0gc3RhcnQuaGFzVGltZSA/IDAgOiAyMzU5OwogIGNvbnN0IGVuZFRpbWVzdGFtcElkZW50aWZpZXIgPSBnZXRUaW1lc3RhbXBJZGVudGlmaWVyKGVuZCkgKyBlbmRPZmZzZXQ7CiAgY29uc3QgYWxsRGF5ID0gIXN0YXJ0Lmhhc1RpbWU7CiAgcmV0dXJuIHsKICAgIGlucHV0LAogICAgc3RhcnQsCiAgICBzdGFydElkZW50aWZpZXIsCiAgICBzdGFydFRpbWVzdGFtcElkZW50aWZpZXIsCiAgICBlbmQsCiAgICBlbmRJZGVudGlmaWVyLAogICAgZW5kVGltZXN0YW1wSWRlbnRpZmllciwKICAgIGFsbERheSwKICAgIGluZGV4CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNFdmVudE9uKGV2ZW50LCBkYXlJZGVudGlmaWVyKSB7CiAgcmV0dXJuIGRheUlkZW50aWZpZXIgPj0gZXZlbnQuc3RhcnRJZGVudGlmaWVyICYmIGRheUlkZW50aWZpZXIgPD0gZXZlbnQuZW5kSWRlbnRpZmllciAmJiBkYXlJZGVudGlmaWVyICogT0ZGU0VUX1RJTUUgIT09IGV2ZW50LmVuZFRpbWVzdGFtcElkZW50aWZpZXI7Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzRXZlbnRTdGFydChldmVudCwgZGF5LCBkYXlJZGVudGlmaWVyLCBmaXJzdFdlZWtkYXkpIHsKICByZXR1cm4gZGF5SWRlbnRpZmllciA9PT0gZXZlbnQuc3RhcnRJZGVudGlmaWVyIHx8IGZpcnN0V2Vla2RheSA9PT0gZGF5LndlZWtkYXkgJiYgaXNFdmVudE9uKGV2ZW50LCBkYXlJZGVudGlmaWVyKTsKfQpleHBvcnQgZnVuY3Rpb24gaXNFdmVudE92ZXJsYXBwaW5nKGV2ZW50LCBzdGFydElkZW50aWZpZXIsIGVuZElkZW50aWZpZXIpIHsKICByZXR1cm4gc3RhcnRJZGVudGlmaWVyIDw9IGV2ZW50LmVuZElkZW50aWZpZXIgJiYgZW5kSWRlbnRpZmllciA+PSBldmVudC5zdGFydElkZW50aWZpZXI7Cn0="},{"version":3,"sources":["../../../../src/components/VCalendar/util/events.ts"],"names":[],"mappings":"AAAA,SAAA,cAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,WAAA,QAAA,aAAA;AAQA,OAAM,SAAA,UAAA,CAAA,KAAA,EAAA,KAAA,EAAA,aAAA,EAAA,WAAA,EAAqG;AACzG,QAAM,KAAK,GAAsB,cAAc,CAAC,KAAK,CAAN,aAAM,CAAN,EAA/C,IAA+C,CAA/C;AACA,QAAM,GAAG,GAAuB,KAAK,CAAL,WAAK,CAAL,GAAqB,cAAc,CAAC,KAAK,CAAN,WAAM,CAAN,EAAnC,IAAmC,CAAnC,GAAhC,KAAA;AACA,QAAM,eAAe,GAAW,gBAAgB,CAAhD,KAAgD,CAAhD;AACA,QAAM,wBAAwB,GAAW,sBAAsB,CAA/D,KAA+D,CAA/D;AACA,QAAM,aAAa,GAAW,gBAAgB,CAA9C,GAA8C,CAA9C;AACA,QAAM,SAAS,GAAW,KAAK,CAAL,OAAA,GAAA,CAAA,GAA1B,IAAA;AACA,QAAM,sBAAsB,GAAW,sBAAsB,CAAtB,GAAsB,CAAtB,GAAvC,SAAA;AACA,QAAM,MAAM,GAAY,CAAC,KAAK,CAA9B,OAAA;AAEA,SAAO;AAAA,IAAA,KAAA;AAAA,IAAA,KAAA;AAAA,IAAA,eAAA;AAAA,IAAA,wBAAA;AAAA,IAAA,GAAA;AAAA,IAAA,aAAA;AAAA,IAAA,sBAAA;AAAA,IAAA,MAAA;AAA+G,IAAA;AAA/G,GAAP;AACD;AAED,OAAM,SAAA,SAAA,CAAA,KAAA,EAAA,aAAA,EAAsE;AAC1E,SAAO,aAAa,IAAI,KAAK,CAAtB,eAAA,IACL,aAAa,IAAI,KAAK,CADjB,aAAA,IAEL,aAAa,GAAb,WAAA,KAAgC,KAAK,CAFvC,sBAAA;AAGD;AAED,OAAM,SAAA,YAAA,CAAA,KAAA,EAAA,GAAA,EAAA,aAAA,EAAA,YAAA,EAAuH;AAC3H,SAAO,aAAa,KAAK,KAAK,CAAvB,eAAA,IAA4C,YAAY,KAAK,GAAG,CAApB,OAAA,IAAgC,SAAS,CAAA,KAAA,EAA5F,aAA4F,CAA5F;AACD;AAED,OAAM,SAAA,kBAAA,CAAA,KAAA,EAAA,eAAA,EAAA,aAAA,EAAwG;AAC5G,SAAO,eAAe,IAAI,KAAK,CAAxB,aAAA,IAA0C,aAAa,IAAI,KAAK,CAAvE,eAAA;AACD","sourcesContent":["import {\n  parseTimestamp,\n  getDayIdentifier,\n  getTimestampIdentifier,\n  OFFSET_TIME,\n} from './timestamp'\nimport { CalendarTimestamp, CalendarEvent, CalendarEventParsed } from 'types'\n\nexport function parseEvent (input: CalendarEvent, index: number, startProperty: string, endProperty: string): CalendarEventParsed {\n  const start: CalendarTimestamp = parseTimestamp(input[startProperty], true)\n  const end: CalendarTimestamp = (input[endProperty] ? parseTimestamp(input[endProperty], true) : start)\n  const startIdentifier: number = getDayIdentifier(start)\n  const startTimestampIdentifier: number = getTimestampIdentifier(start)\n  const endIdentifier: number = getDayIdentifier(end)\n  const endOffset: number = start.hasTime ? 0 : 2359\n  const endTimestampIdentifier: number = getTimestampIdentifier(end) + endOffset\n  const allDay: boolean = !start.hasTime\n\n  return { input, start, startIdentifier, startTimestampIdentifier, end, endIdentifier, endTimestampIdentifier, allDay, index }\n}\n\nexport function isEventOn (event: CalendarEventParsed, dayIdentifier: number): boolean {\n  return dayIdentifier >= event.startIdentifier &&\n    dayIdentifier <= event.endIdentifier &&\n    dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier\n}\n\nexport function isEventStart (event: CalendarEventParsed, day: CalendarTimestamp, dayIdentifier: number, firstWeekday: number): boolean {\n  return dayIdentifier === event.startIdentifier || (firstWeekday === day.weekday && isEventOn(event, dayIdentifier))\n}\n\nexport function isEventOverlapping (event: CalendarEventParsed, startIdentifier: number, endIdentifier: number): boolean {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier\n}\n"],"sourceRoot":""}]}